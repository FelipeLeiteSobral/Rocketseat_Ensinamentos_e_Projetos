/*
    ## Tipos de controle de versão

    # Sistemas Locais

    - Copiar os arquivos para outro diretório
    - Muito comum e muito simples
    - Incrivelmente propensa a erros
    - Fácil de sobrescrever arquivos, caso haja feito uma cópia errada

    ~~ Para superar os possíveis erros, existe o RCS - Revision Control System

    - Ferramenta popular (antigamente) para controle de versão	
    - Mantém conjuntos, ou seja, as diferenças entre os arquivos
    - Formato especial no disco
    - Re-criar como qualquer arquivo se parecia em qualquer ponto no tempo, adicionando-se todas as alterações ao arquivos
    (E se você precisar trabalhar com desenvolvedores em outros sistemas?)

    # Sistemas Centralizados

    - Um único servidor que contém todos os arquivos de controle de versão
    - Vários clientes usam arquivos a partir desse lugar central

    Por muitos anos, este tem sido o padrão para controle de versão
    
        * Vantagens
            - Controle sobre atividades dos colaboradores no projeto
            - Os administradores têm controle refinado sobre quem pode fazer o que
            - Mais fácil de administrar um CVCS do que lidar com banco de dados locais em cada cliente

        * Desvantagens
            - Se esse servidor der problemas por uma hora, durante essa ninguém pode colaborar ou salvar as alterações de versão para o que quer que eles estejam trabalhando.
            - Se o disco rígido do banco de dados central for corrompido, você perde absolutamente tudo
            - Sistemas VCS locais sofrem com esse mesmo problema
    ~~ Sempre que você tenha toda a história do projeto em um único lugar, há o risco de perder tudo

    # Sistemas Distribuídos

    - Duplicar (clonar) localmente o repositório completo
    - Se qualquer servidor morrer, e esses sistemas estiverem colaborando por meio dele, qualquer um dos repositórios do cliente poderá ser copiado de volta para o servidor
    - Cada clone é de fato um backup completo de todos os dados
    - Clientes usam o estado mais recente dos arquivos
*/